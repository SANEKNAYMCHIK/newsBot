// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: proto/news.proto

package news

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NewsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sources       []string               `protobuf:"bytes,1,rep,name=sources,proto3" json:"sources,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NewsRequest) Reset() {
	*x = NewsRequest{}
	mi := &file_proto_news_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewsRequest) ProtoMessage() {}

func (x *NewsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_news_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewsRequest.ProtoReflect.Descriptor instead.
func (*NewsRequest) Descriptor() ([]byte, []int) {
	return file_proto_news_proto_rawDescGZIP(), []int{0}
}

func (x *NewsRequest) GetSources() []string {
	if x != nil {
		return x.Sources
	}
	return nil
}

type NewsItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Link          string                 `protobuf:"bytes,2,opt,name=link,proto3" json:"link,omitempty"`
	Date          string                 `protobuf:"bytes,3,opt,name=date,proto3" json:"date,omitempty"`
	Description   string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Website       string                 `protobuf:"bytes,5,opt,name=website,proto3" json:"website,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NewsItem) Reset() {
	*x = NewsItem{}
	mi := &file_proto_news_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewsItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewsItem) ProtoMessage() {}

func (x *NewsItem) ProtoReflect() protoreflect.Message {
	mi := &file_proto_news_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewsItem.ProtoReflect.Descriptor instead.
func (*NewsItem) Descriptor() ([]byte, []int) {
	return file_proto_news_proto_rawDescGZIP(), []int{1}
}

func (x *NewsItem) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *NewsItem) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *NewsItem) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *NewsItem) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *NewsItem) GetWebsite() string {
	if x != nil {
		return x.Website
	}
	return ""
}

type NewsItemList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*NewsItem            `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NewsItemList) Reset() {
	*x = NewsItemList{}
	mi := &file_proto_news_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewsItemList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewsItemList) ProtoMessage() {}

func (x *NewsItemList) ProtoReflect() protoreflect.Message {
	mi := &file_proto_news_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewsItemList.ProtoReflect.Descriptor instead.
func (*NewsItemList) Descriptor() ([]byte, []int) {
	return file_proto_news_proto_rawDescGZIP(), []int{2}
}

func (x *NewsItemList) GetItems() []*NewsItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type NewsResponse struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Data          map[string]*NewsItemList `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NewsResponse) Reset() {
	*x = NewsResponse{}
	mi := &file_proto_news_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewsResponse) ProtoMessage() {}

func (x *NewsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_news_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewsResponse.ProtoReflect.Descriptor instead.
func (*NewsResponse) Descriptor() ([]byte, []int) {
	return file_proto_news_proto_rawDescGZIP(), []int{3}
}

func (x *NewsResponse) GetData() map[string]*NewsItemList {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_proto_news_proto protoreflect.FileDescriptor

const file_proto_news_proto_rawDesc = "" +
	"\n" +
	"\x10proto/news.proto\x12\x04news\"'\n" +
	"\vNewsRequest\x12\x18\n" +
	"\asources\x18\x01 \x03(\tR\asources\"\x84\x01\n" +
	"\bNewsItem\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12\x12\n" +
	"\x04link\x18\x02 \x01(\tR\x04link\x12\x12\n" +
	"\x04date\x18\x03 \x01(\tR\x04date\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12\x18\n" +
	"\awebsite\x18\x05 \x01(\tR\awebsite\"4\n" +
	"\fNewsItemList\x12$\n" +
	"\x05items\x18\x01 \x03(\v2\x0e.news.NewsItemR\x05items\"\x8d\x01\n" +
	"\fNewsResponse\x120\n" +
	"\x04data\x18\x01 \x03(\v2\x1c.news.NewsResponse.DataEntryR\x04data\x1aK\n" +
	"\tDataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12(\n" +
	"\x05value\x18\x02 \x01(\v2\x12.news.NewsItemListR\x05value:\x028\x012>\n" +
	"\n" +
	"NewsParser\x120\n" +
	"\aGetNews\x12\x11.news.NewsRequest\x1a\x12.news.NewsResponseB\x0eZ\f./proto/newsb\x06proto3"

var (
	file_proto_news_proto_rawDescOnce sync.Once
	file_proto_news_proto_rawDescData []byte
)

func file_proto_news_proto_rawDescGZIP() []byte {
	file_proto_news_proto_rawDescOnce.Do(func() {
		file_proto_news_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_news_proto_rawDesc), len(file_proto_news_proto_rawDesc)))
	})
	return file_proto_news_proto_rawDescData
}

var file_proto_news_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_proto_news_proto_goTypes = []any{
	(*NewsRequest)(nil),  // 0: news.NewsRequest
	(*NewsItem)(nil),     // 1: news.NewsItem
	(*NewsItemList)(nil), // 2: news.NewsItemList
	(*NewsResponse)(nil), // 3: news.NewsResponse
	nil,                  // 4: news.NewsResponse.DataEntry
}
var file_proto_news_proto_depIdxs = []int32{
	1, // 0: news.NewsItemList.items:type_name -> news.NewsItem
	4, // 1: news.NewsResponse.data:type_name -> news.NewsResponse.DataEntry
	2, // 2: news.NewsResponse.DataEntry.value:type_name -> news.NewsItemList
	0, // 3: news.NewsParser.GetNews:input_type -> news.NewsRequest
	3, // 4: news.NewsParser.GetNews:output_type -> news.NewsResponse
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_proto_news_proto_init() }
func file_proto_news_proto_init() {
	if File_proto_news_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_news_proto_rawDesc), len(file_proto_news_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_news_proto_goTypes,
		DependencyIndexes: file_proto_news_proto_depIdxs,
		MessageInfos:      file_proto_news_proto_msgTypes,
	}.Build()
	File_proto_news_proto = out.File
	file_proto_news_proto_goTypes = nil
	file_proto_news_proto_depIdxs = nil
}
